type Query {
  getDriver: [Driver!]!
  getUser: [User!]!
  getRoomRequest: [RoomRequest!]!
}

type Mutation {
  registerUser(
    name: String!
    surname: String!
    idnumber: String!
    phnumber: String!
    email: String!
    password: String!
  ): User!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, name: String): User!

  registerDriver(DriverInput: DriverInput!): Driver!
  registerCar(ItemCar: ItemCar!): Driver!
  deleteDriver(id: ID!): Driver!

  addRoomRequest(carType: String!, dateTime: String!): RoomRequest!  
}

type User {
  id: ID!
  name: String!
  surname: String!
  idnumber: String!
  phnumber: String!
  email: String!
  password: String!
}

type Driver {
  id: ID!
  name: String!
  surname: String!
  idnumber: String!
  phnumber: String!
  email: String!
  password: String!
  car: [Car]
}

type Car {
  carId: ID!
  carType: String
  carOption: String
}

input DriverInput {
  name: String!
  surname: String!
  idnumber: String!
  phnumber: String!
  email: String!
  password: String!
  car: [ItemCar]
}

input ItemCar {
  driverId: String!
  carType: String
  carOption: String
}

type RoomRequest {
  id: ID!
  carType: String!
  dateTime: String!
}
